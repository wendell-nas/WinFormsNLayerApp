<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>